This is a speech adapter, running in user space,
based on the acsint / acsbridge system.
It is modeled after my Jupiter speech adapter that lives in the kernel,
but we don't have to be in the kernel any longer!

This is a work in progress, well tested for some synthesizers,
and not even tried on others.

jupiter.c is the adapter,
and it shows what you can do in 1,500 lines of code if you have a bridge layer
and a text preprocessor at your disposal.

The key bindings are in jup.cfg.

tpencode.c encodes certain constructs like dates and times and phone numbers
and addresses etc, and tpxlate.c translates these back out into words.
Thus 02/03/1932 becomes
february third nineteen thirdy 2
This is the text preprocessor,
and it will soon move to the bridge layer, and out of here.
It is not jupiter specific, so why should it be here?
You can exercise the text preprocessor, without running the adapter,
by running
jupiter tts
or
jupiter ltts
ltts reads punctuations literally, every one of them.
That may sound like overkill, but that's what I do 99.9% of the time.
Perhaps because I'm a programmer - every punctuation is important.
Even when I read a story, I'd rather hear the word comma than a pause.
tts-trial has text to experiment with.
jupiter ltts <tts-trial
